<CardBrowser>:
    name: 'card_browser'
    FloatLayout:
        ActionBar:
            background_color: 0,.6,1,1
            id: ac
            pos_hint: {'top':1}
            ActionView:
                id: av
                ActionPrevious:
                    with_previous: False
                    size_hint_x: None
                    width: self.height
                    on_release: smsm.toggle_state()
                ActionLabel:
                    id: aclabel
                    text: 'Card Browser'
                    text_size: self.width  , None
                ActionLabel:
                ActionButton:
                    id: sbutton
                    text: 'Search'
                    on_release: root.start_search()
        SlideMenu
            id: smsm
            size_hint_y: None
            height: root.height - ac.height
            anim_type: 'slide_above_anim'
            BoxLayout:
                orientation: 'vertical'
                spacing: '1dp'
                Button:
                    text: 'Decks'
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    on_release: if smsm._anim_progress >=1 : root.manager.current = 'solo_menu'
                    color:[0,0,0,.8]
                    background_normal: ''
                    background_color: 1,1,1,1
                Button:
                    text: 'Card Browser'
                    color:[0,0,0,.8]
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    #on_release: if smsm._anim_progress >=1 : print 'card browser pressed'
                    background_normal: ''
                    background_color: 1,1,1,1
                Button:
                    text: 'Statistics'
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    on_release: if smsm._anim_progress >=1 : print 'statistics pressed'
                    color:[0,0,0,.8]
                    background_normal: ''
                    background_color: 1,1,1,1
                Button:
                    text: 'Settings'
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    on_release: if smsm._anim_progress >=1 : print 'settings pressed'
                    color:[0,0,0,.8]
                    background_normal: ''
                    background_color: 1,1,1,1
                Button:
                    text: 'Help'
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    on_release: if smsm._anim_progress >=1 : print 'halp pressed'
                    color:[0,0,0,.8]
                    background_normal: ''
                    background_color: 1,1,1,1
                Button:
                    text: 'Send feedback'
                    text_size: self.width *1/2 ,  None
                    on_x: self.state = 'normal'
                    on_release: if smsm._anim_progress >=1 : print 'send feedback pressed'
                    color:[0,0,0,.8]
                    background_normal: ''
                    background_color: 1,1,1,1
                Widget:
                    size_hint: 1,2.5
                    canvas:
                        Color:
                            rgba: 1,1,1,1
                        Rectangle:
                            pos: self.pos
                            size: self.size
            FloatLayout:
                canvas:
                    Color:
                        rgba: 1,1,1,.9
                    Rectangle
                        pos: self.pos
                        size: self.size
                id: dad
                size_hint_y: None
                height: root.height - ac.height
                BoxLayout
                    id: bl1
                    size_hint: None , None
                    x: root.height/26
                    width: root.width - 2 * self.x
                    y: root.height - ac.height - 1.3 * self.height
                    height: ti.minimum_height
                    PressTextInput:
                        id: ti
                        multiline: False
                        font_size: root.height / 24
                        my_button: search
                    Button:
                        id: search
                        text: 'Search'
                        color: 0,0,0,1
                        background_color: 1,1,1,1
                        background_normal: ''
                        on_state: if self.state is 'down': root.manager.cb_display_cards('search',root.manager.mainbutton,ti.text)
                    Widget:
                        size_hint_x: .02
                    BoxLayout:
                        id: ddbox
                BoxLayout:
                    id: bl
                    size_hint_y: None
                    height: '50dp'
                    y: fl10.height
                    Label:
                        text: "Question"
                        color: 0,0,0,1
                        #markup: True
                    Label
                        text: 'Answer'
                        color: 0,0,0,1
                    

                ScrollBox
                    id: fl10
                    size_hint: None , None
                    x: root.height/80
                    width: root.width - 2 * self.x
                    y: root.height /60
                    height: root.height - ac.height - bl.height - bl1.height
                    GridLayout:
                        canvas:
                            Color:
                                rgba: 0,0,0,0
                            Rectangle:
                                pos: self.pos
                                size: self.size
                        id: gl
                        spacing: [0 , '1dp']
                        size_hint_y: None
                        size: self.minimum_size
                        #height: ti.minimum_height
                        cols: 2
